name: CI

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-latest    

    steps:
    - name: Install Postgresql 11 and PostGIS
      uses: huaxk/postgis-action@v1
      with:
        postgresql version: '11'
        postgresql password: 'password'
        postgresql user: 'hastile' 
        postgresql db: 'hastile_test'

    - name: Get code
      uses: actions/checkout@v2
      with:
        path: ./hastile

    - name: Checkout zellige repo
      uses: actions/checkout@v2
      with:
        repository: zellige/zellige
        path: ./zellige
    
    - name: Setup Stack
      uses: mstksg/setup-stack@v2
    
    - name: Cache Stack downloads
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-modules-linux
      with:
        path: /home/runner/.stack/
        key: ${{ hashFiles('**/stack.yaml.lock') }}

    - name: Cache Stack Build
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-local-modules-linux
      with:
        path: ./hastile/.stack-work/
        key: ${{ hashFiles('**/hastile.cabal') }}${{ hashFiles('**/stack.yaml.lock') }}
    
    - name: stack pre (setup, configure)
      run: |
        stack setup --stack-yaml stack-ci.yaml --no-terminal -j2
        stack build --stack-yaml stack-ci.yaml --no-system-ghc --only-configure --no-terminal -j2
      working-directory: ./hastile

    - name: stack compile and install
      run: |
        stack build  --stack-yaml stack-ci.yaml --no-terminal -j2
        stack install  --stack-yaml stack-ci.yaml --no-terminal -j2
      working-directory: ./hastile

    - name: db migrate
      run: |
        ./db/migration setup --stack test
      working-directory: ./hastile
    
    - name: stack test
      run: |
        stack test  --stack-yaml stack-ci.yaml --no-terminal -j2
      working-directory: ./hastile

    - name: create zip
      run: |
        stack install --stack-yaml stack-ci.yaml --local-bin-path .
        zip -r hastile.zip ./hastile ./migrate
      working-directory: ./hastile

    - name: Upload zip of binary
      uses: actions/upload-artifact@v1
      with:
        name: hastile-linux
        path: ./hastile/hastile.zip
  
  build_windows:
    runs-on: windows-latest

    steps:

    - name: Install Postgresql 11 Client
      run: |
        choco install postgresql11
        echo "::add-path::C:\Program Files\PostgreSQL\11\bin"

    - name: Get code
      uses: actions/checkout@v2
      with:
        path: ./hastile

    - name: Checkout zellige repo
      uses: actions/checkout@v2
      with:
        repository: zellige/zellige
        path: ./zellige
    
    - name: Setup Stack
      uses: mstksg/setup-stack@v2
    
    - name: Cache Stack downloads
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-modules-windows
      with:
        path: C:\Users\runneradmin\AppData\Roaming\stack
        key: ${{ hashFiles('**/stack.yaml.lock') }}

    - name: Cache Stack Build
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-local-modules-windows
      with:
        path: ./hastile/.stack-work/
        key: ${{ hashFiles('**/hastile.cabal') }}${{ hashFiles('**/stack.yaml.lock') }}
      
    - name: stack pre (setup, configure)
      run: |
        echo "::add-path::C:\Program Files\PostgreSQL\11\bin"
        stack setup --stack-yaml stack-ci.yaml --no-terminal -j2
        stack build --stack-yaml stack-ci.yaml --no-system-ghc --only-configure --no-terminal -j2
      working-directory: ./hastile

    - name: stack compile
      run: |
        echo "::add-path::C:\Program Files\PostgreSQL\11\bin"
        stack build --stack-yaml stack-ci.yaml --no-terminal -j2
      working-directory: ./hastile        

    - name: create zip
      shell: powershell -Command "& '{0}'"
      run: |
        echo "::add-path::C:\Program Files\PostgreSQL\11\bin"
        stack install --stack-yaml stack-ci.yaml --local-bin-path
        7z a hastile.zip ./hastile.exe ./migrate.exe
      working-directory: ./hastile

    - name: Upload zip of binary
      uses: actions/upload-artifact@v1
      with:
        name: hastile-windows
        path: ./hastile/hastile.zip
  
  build_macos:
    runs-on: macos-latest

    steps:

    - name: Install Postgresql 11 Client
      run: |
        brew install postgresql@11

    - name: Get code
      uses: actions/checkout@v2
      with:
        path: ./hastile

    - name: Checkout zellige repo
      uses: actions/checkout@v2
      with:
        repository: zellige/zellige
        path: ./zellige
    
    - name: Setup Stack
      uses: mstksg/setup-stack@v2
    
    - name: Cache Stack downloads
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-modules-macos
      with:
        path: /home/runner/.stack/
        key: ${{ hashFiles('**/stack.yaml.lock') }}

    - name: Cache Stack Build
      uses: actions/cache@v1
      env:
        cache-name: cache-stack-local-modules-macos
      with:
        path: ./hastile/.stack-work/
        key: ${{ hashFiles('**/hastile.cabal') }}${{ hashFiles('**/stack.yaml.lock') }}
      
    - name: stack pre (setup, configure)
      timeout-minutes: 720
      run: |
        export PATH=/usr/local/opt/postgresql@11/bin:$PATH
        export LDFLAGS="-L/usr/local/opt/postgresql@11/lib"
        export CPPFLAGS="-I/usr/local/opt/postgresql@11/include"
        stack setup --stack-yaml stack-ci.yaml --no-terminal
        stack build --stack-yaml stack-ci.yaml --no-system-ghc --only-configure --no-terminal
      working-directory: ./hastile

    - name: stack compile
      timeout-minutes: 720
      run: |
        export PATH=/usr/local/opt/postgresql@11/bin:$PATH
        export LDFLAGS="-L/usr/local/opt/postgresql@11/lib"
        export CPPFLAGS="-I/usr/local/opt/postgresql@11/include"
        stack build --stack-yaml stack-ci.yaml --no-terminal
      working-directory: ./hastile        

    - name: create zip
      run: |
        export PATH=/usr/local/opt/postgresql@11/bin:$PATH
        export LDFLAGS="-L/usr/local/opt/postgresql@11/lib"
        export CPPFLAGS="-I/usr/local/opt/postgresql@11/include"
        stack install --stack-yaml stack-ci.yaml --local-bin-path .
        zip -r hastile.zip ./hastile ./migrate
      working-directory: ./hastile

    - name: Upload zip of binary
      uses: actions/upload-artifact@v1
      with:
        name: hastile-macos
        path: ./hastile/hastile.zip
